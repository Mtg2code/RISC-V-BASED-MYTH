\m5_TLV_version 1d: tl-x.org
\m5
   
   // ============================================
   // Welcome, new visitors! Try the "Learn" menu.
   // ============================================
   
   //use(m5-1.0)   /// uncomment to use M5 macro library.
\SV
   // Macro providing required top-level module definition, random
   // stimulus support, and Verilator config.
   m5_makerchip_module   // (Expanded in Nav-TLV pane.)
\TLV
   $reset = *reset;
   
   //Milen
   $op[1:0];
   $val1[31:0] = $rand1[3:0];
   $val2[31:0] = $rand2[3:0]; // Making Values 1 and 2 small for simulation purposes
   
   $sum [31:0] = $val1[31:0] + $val2[31:0] ;    //Sum
   $diff [31:0] = $val1[31:0] - $val2[31:0] ;   //Difference
   $prod[31:0] = $val1[31:0] * $val2[31:0] ;    //Product
   $quot [31:0] = ($val2 != 0) ? ($val1 / $val2) : 32'd0; //Quotient while checking for fail condition
   
   $out = ($op == 2'b00) ? $sum : ($op == 2'b01) ? $diff :($op == 2'b10) ? $prod : $quot; // Chained Ternary Operator for Each Case
   
   
   // Assert these to end simulation (before the cycle limit).
   *passed = *cyc_cnt > 40;
   *failed = 1'b0;
\SV
   endmodule
